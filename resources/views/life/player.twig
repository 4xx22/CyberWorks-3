{% extends 'templates/template.twig' %}

{% set copRanks = range(0,7) %}
{% set emsRanks = range(0,5) %}
{% set adminRanks = range(0,5) %}

{% block title %}
    | {{ player.name }}
{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-md-3 col-sm-3 col-xs-3">
            <div class="x_panel">
                <div class="x_title">
                    <h2>{{ player.name }}</h2>

                    <ul class="nav navbar-right panel_toolbox" style="min-width: 0px;">
                        {% if auth.permissions.can_compensate %}
                            <li>
                                <a id="compensate" data-toggle="modal" data-target=".compensate"><i class="fa fa-money"></i></a>
                            </li>
                        {% endif %}
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <form class="form-horizontal form-label-left">

                        <a target="_blank" href="http://steamcommunity.com/profiles/{{ player.playerid }}" class="btn btn-warning" style="display: block; width:100%;">Steam Profile</a>

                        {% if auth.permissions.can_compensate %}
                            <button type="button" class="btn btn-success" style="display: block; width:100%;"  data-toggle="modal" data-target=".compensate">Compensate</button>
                        {% endif %}
                        {% if auth.permissions.can_add_note %}
                            <button type="button" class="btn btn-info" style="display: block; width:100%;"  data-toggle="modal" data-target=".addNote">Add Note</button>
                        {% endif %}

                        <div class="divider-dashed"></div>

                        <div class="form-group">
                            <label class="col-sm-12 control-label" style="text-align: center;"><i class="fa fa-steam"></i> SteamID: {{ player.pid }}</label>
                            <label class="col-sm-12 control-label" style="text-align: center;"><i class="fa fa-steam"></i> GUID: {{ player.guid }}</label>
                        </div>

                        <div class="divider-dashed"></div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label"><i class="fa fa-bank"></i> Bank</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    {% if auth.permissions.can_edit_bank %}
                                        <input type="number" class="form-control" id="bankValue" value="{{ player.bankacc }}">
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="bankSave"><i class="fa fa-save"></i></button>
                                        </span>
                                    {% else %}
                                        <input type="number" class="form-control" value="{{ player.bankacc }}" disabled>
                                        <span class="input-group-btn">
                                            <a href="" class="btn btn-danger" disabled><i class="fa fa-save"></i></a>
                                        </span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label"><i class="fa fa-dollar"></i> Cash</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    {% if auth.permissions.can_edit_cash %}
                                        <input type="number" class="form-control" id="cashValue" value="{{ player.cash }}">
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="cashSave"><i class="fa fa-save"></i></button>
                                        </span>
                                    {% else %}
                                        <input type="number" class="form-control" value="{{ player.cash }}" disabled>
                                        <span class="input-group-btn">
                                            <a href="" class="btn btn-danger" disabled><i class="fa fa-save"></i></a>
                                        </span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                        <div class="divider-dashed"></div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Donator</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    {% if auth.permissions.can_edit_donator %}
                                        <select id="donatorRanks" class="form-control">
                                            {% for rank in adminRanks %}
                                                <option value="{{ rank }}" {% if player.donorlevel == rank %} selected {% endif %}>{{ rank }}</option>
                                            {% endfor %}
                                        </select>
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="donatorSave"><i class="fa fa-save"></i></button>
                                        </span>
                                    {% else %}
                                        <input type="number" class="form-control" value="{{ player.donatorlvl }}" disabled>
                                        <span class="input-group-btn">
                                            <a href="" class="btn btn-danger" disabled><i class="fa fa-save"></i></a>
                                        </span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label"><i class="fa fa-bars"></i> Jailed</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    {% if auth.permissions.can_edit_jailed %}
                                        <select id="arrestedValue" class="form-control">
                                            <option value="1" {% if player.arrested %} selected {% endif %}>Yes</option>
                                            <option value="0"{% if not player.arrested %} selected {% endif %}>No</option>
                                        </select>
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="arrestedSave"><i class="fa fa-save"></i></button>
                                        </span>
                                    {% else %}
                                        <input type="number" class="form-control" value="{{ player.arrested }}" disabled>
                                        <span class="input-group-btn">
                                            <a href="" class="btn btn-danger" disabled><i class="fa fa-save"></i></a>
                                        </span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                        <div class="divider-dashed"></div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label"><i class="fa fa-taxi"></i> Cop</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    {% if auth.permissions.can_edit_cop_rank %}
                                        <select id="copRanks" class="form-control">
                                            {% for rank in copRanks %}
                                                <option value="{{ rank }}" {% if player.coplevel == rank %} selected {% endif %}>{{ rank }}</option>
                                            {% endfor %}
                                        </select>
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="copSave"><i class="fa fa-save"></i></button>
                                        </span>
                                    {% else %}
                                        <input type="number" class="form-control" value="{{ player.coplevel }}" disabled>
                                        <span class="input-group-btn">
                                            <a href="" class="btn btn-danger" disabled><i class="fa fa-save"></i></a>
                                        </span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label"><i class="fa fa-ambulance"></i> Medic</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    {% if auth.permissions.can_edit_ems_rank %}
                                        <select id="emsRanks" class="form-control">
                                            {% for rank in emsRanks %}
                                                <option value="{{ rank }}" {% if player.mediclevel == rank %} selected {% endif %}>{{ rank }}</option>
                                            {% endfor %}
                                        </select>
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="emsSave"><i class="fa fa-save"></i></button>
                                        </span>
                                    {% else %}
                                        <input type="number" class="form-control" value="{{ player.mediclevel }}" disabled>
                                        <span class="input-group-btn">
                                            <a href="" class="btn btn-danger" disabled><i class="fa fa-save"></i></a>
                                        </span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label"><i class="fa fa-user"></i> Admin</label>
                            <div class="col-sm-9">
                                <div class="input-group">
                                    {% if auth.permissions.can_edit_admin_rank %}
                                        <select id="adminRanks" class="form-control">
                                            {% for rank in adminRanks %}
                                                <option value="{{ rank }}" {% if player.adminlevel == rank %} selected {% endif %}>{{ rank }}</option>
                                            {% endfor %}
                                        </select>
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-primary" id="adminSave"><i class="fa fa-save"></i></button>
                                        </span>
                                    {% else %}
                                        <input type="number" class="form-control" value="{{ player.adminlevel }}" disabled>
                                        <span class="input-group-btn">
                                            <a href="" class="btn btn-danger" disabled><i class="fa fa-save"></i></a>
                                        </span>
                                    {% endif %}
                                </div>
                            </div>
                        </div>
                    </form>

                    <div class="clearfix"></div>
                </div>
            </div>
        </div>
        <div class="col-md-9 col-sm-9 col-xs-9">
            <div class="row top_tiles">
                <div class="animated flipInY col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="tile-stats">
                        <div class="icon"><i class="fa fa-bank"></i></div>
                        <div class="count">${{ player.bankacc }}</div>
                        <h3>Bank Account</h3>
                        <p>Total Funds In Bank.</p>
                    </div>
                </div>
                <div class="animated flipInY col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="tile-stats">
                        <div class="icon"><i class="fa fa-dollar"></i></div>
                        <div class="count">${{ player.cash }}</div>
                        <h3>Cash</h3>
                        <p>Total Funds In Hand.</p>
                    </div>
                </div>
                <div class="animated flipInY col-lg-3 col-md-3 col-sm-6 col-xs-12">
                    <div class="tile-stats">
                        <div class="icon"><i class="fa fa-user-secret"></i></div>
                        <div class="count">{{ player.adminlevel }}</div>
                        <h3>Admin Level</h3>
                        <p>Admin Level In Game.</p>
                    </div>
                </div>
                {% if auth.permissions.can_edit_cop_rank %}
                    <div class="animated flipInY col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="tile-stats">
                            <div class="icon"><i class="fa fa-taxi"></i></div>
                            <div class="count">{{ player.coplevel }}</div>
                            <h3>Cop Level</h3>
                            <p>Rank In The Police Force.</p>
                        </div>
                    </div>
                {% else %}
                    <div class="animated flipInY col-lg-3 col-md-3 col-sm-6 col-xs-12">
                        <div class="tile-stats">
                            <div class="icon"><i class="fa fa-ambulance"></i></div>
                            <div class="count">{{ player.mediclevel }}</div>
                            <h3>Medic Level</h3>
                            <p>Rank In The Fire Department.</p>
                        </div>
                    </div>
                {% endif %}
            </div>

            <div class="row">
                <div class="" role="tabpanel" data-example-id="togglable-tabs">
                    <ul id="myTab" class="nav nav-tabs bar_tabs" role="tablist">
                        {% if auth.permissions.can_view_player_civ_lic %}
                            <li role="presentation" class="active">
                                <a href="#civLic" id="home-tab" role="tab" data-toggle="tab" aria-expanded="true">Civ Licenses</a>
                            </li>
                        {% endif %}
                        {% if auth.permissions.can_view_player_cop_lic %}
                            <li role="presentation" class="">
                                <a href="#copLic" role="tab" id="profile-tab" data-toggle="tab" aria-expanded="false">Cop Licenses</a>
                            </li>
                        {% endif %}
                        {% if auth.permissions.can_view_player_ems_lic %}
                            <li role="presentation" class="">
                                <a href="#medLic" role="tab" id="profile-tab2" data-toggle="tab" aria-expanded="false">Medic Licenses</a>
                            </li>
                        {% endif %}
                        {% if auth.permissions.can_view_player_vehicles %}
                        <li role="presentation" class="">
                            <a href="#vehicles" role="tab" id="profile-tab2" data-toggle="tab" aria-expanded="false">Vehicles</a>
                        </li>
                        {% endif %}
                        {% if auth.permissions.can_view_player_notes %}
                        <li role="presentation" class="">
                            <a href="#notes" role="tab" id="profile-tab2" data-toggle="tab" aria-expanded="false">Notes</a>
                        </li>
                        {% endif %}
                        {% if auth.permissions.can_view_player_edit_log %}
                            <li role="presentation" class="">
                                <a href="#editLog" role="tab" id="profile-tab2" data-toggle="tab" aria-expanded="false">Edit Log</a>
                            </li>
                        {% endif %}
                    </ul>
                    <div id="myTabContent" class="tab-content">
                        {% if auth.permissions.can_edit_civ_lic %}
                            <div role="tabpanel" class="tab-pane fade active in" id="civLic" aria-labelledby="home-tab">
                                {% for license in player.civ_licenses %}
                                    {% if license.value %}
                                        <button type="button" id="{{ license.name }}" class="license btn btn-sm btn-success" style="margin-bottom: 3px;">{{ license.name }}</button>
                                    {% else %}
                                        <button type="button" id="{{ license.name }}" class="license btn btn-sm btn-danger" style="margin-bottom: 3px;">{{ license.name }}</button>
                                    {% endif %}
                                {% endfor %}
                            </div>
                        {% endif %}
                        {% if auth.permissions.can_edit_cop_lic %}
                            <div role="tabpanel" class="tab-pane fade {% if not auth.permissions.can_edit_civ_lic %} active in {% endif %}" id="copLic" aria-labelledby="profile-tab">
                                {% for license in player.cop_licenses %}
                                    {% if license.value %}
                                        <button type="button" id="{{ license.name }}" class="copLicense btn btn-sm btn-success" style="margin-bottom: 3px;">{{ license.name }}</button>
                                    {% else %}
                                        <button type="button" id="{{ license.name }}" class="copLicense btn btn-sm btn-danger" style="margin-bottom: 3px;">{{ license.name }}</button>
                                    {% endif %}
                                {% endfor %}
                            </div>
                        {% endif %}
                        {% if auth.permissions.can_edit_ems_lic %}
                            <div role="tabpanel" class="tab-pane fade {% if not auth.permissions.can_edit_cop_lic %} active in {% endif %}" id="medLic" aria-labelledby="profile-tab">
                                {% for license in player.med_licenses %}
                                    {% if license.value %}
                                        <button type="button" id="{{ license.name }}" class="emsLicense btn btn-sm btn-success" style="margin-bottom: 3px;">{{ license.name }}</button>
                                    {% else %}
                                        <button type="button" id="{{ license.name }}" class="emsLicense btn btn-sm btn-danger" style="margin-bottom: 3px;">{{ license.name }}</button>
                                    {% endif %}
                                {% endfor %}
                            </div>
                        {% endif %}
                        {% if auth.permissions.can_view_player_vehicles %}
                        <div role="tabpanel" class="tab-pane fade" id="vehicles" aria-labelledby="profile-tab">
                            <table id="datatable" class="table table-striped table-bordered dataTable no-footer col-lg-12" role="grid" aria-describedby="datatable_info" style="width:100%;">
                                <thead>
                                <tr>
                                    <th>Vehicle Class</th>
                                    <th>Side</th>
                                    <th>Type</th>
                                    <th>Alive</th>
                                    <th>Active</th>
                                    <th>Plate</th>
                                    <th>Color</th>
                                    <th>Inventory</th>
                                </tr>
                                </thead>
                            </table>
                        </div>
                        {% endif %}
                        {% if auth.permissions.can_view_player_notes %}
                            <div role="tabpanel" class="tab-pane fade" id="notes" aria-labelledby="profile-tab">
                                <table id="notesTable" class="table table-striped table-bordered dataTable no-footer col-lg-12" role="grid" aria-describedby="datatable_info" style="width:100%;">
                                    <thead>
                                    <tr>
                                        <th>Author</th>
                                        <th>Type</th>
                                        <th>Message</th>
                                        <th>Created</th>
                                        <th>Actions</th>
                                    </tr>
                                    </thead>
                                </table>
                            </div>
                        {% endif %}
                        {% if auth.permissions.can_view_player_edit_log %}
                            <div role="tabpanel" class="tab-pane fade" id="editLog" aria-labelledby="profile-tab">
                                <table id="editLogs" class="table table-striped table-bordered dataTable no-footer col-lg-12" role="grid" aria-describedby="datatable_info" style="width:100%;">
                                    <thead>
                                        <tr>
                                            <th>Author</th>
                                            <th>Message</th>
                                            <th>Created</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>

    {% if auth.permissions.can_compensate %}
        <div class="modal fade compensate" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel2">Compensate</h4>
                    </div>
                    <div class="modal-body">
                        <h4>Ammount To Compensate</h4>
                        <input type="number" class="form-control" id="compensateValue" value="0">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="compensateSave">Save changes</button>
                    </div>

                </div>
            </div>
        </div>
    {% endif %}

    {% if auth.permissions.can_add_note %}
        <div class="modal fade addNote" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel2">Add Note</h4>
                    </div>
                    <div class="modal-body">
                        <form class="form-horizontal form-label-left">
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Type</label>
                                <div class="col-sm-9">
                                    <div class="input-group" style="width: 100%">
                                        <select id="types" class="form-control">
                                            <option value="0">Info</option>
                                            <option value="1">Warning</option>
                                            <option value="2">Other</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Message</label>
                                <div class="col-sm-9">
                                    <div class="input-group" style="width: 100%">
                                        <textarea id="msg" cols="40" rows="5" style="width: 100%"></textarea>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="noteSave">Save changes</button>
                    </div>

                </div>
            </div>
        </div>
    {% endif %}

    {% if auth.permissions.can_delete_note %}
        <div class="modal fade deleteNote" tabindex="-1" role="dialog" aria-hidden="true" style="display: none;">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span>
                        </button>
                        <h4 class="modal-title" id="myModalLabel2">DELTE NOTE</h4>
                    </div>
                    <div class="modal-body">
                        <h4>Are You Sure?</h4>
                        <input type="hidden" class="form-control" id="noteID">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" id="delteNoteSave">Yes</button>
                        <button type="button" class="btn btn-success" data-dismiss="modal">No</button>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

{% endblock %}

{% block script %}
    <script>
        var csrfTokenName = "{{ csrf.javascript.tokenName }}";
        var csrfTokenValue = "{{ csrf.javascript.tokenValue }}";
    </script>

    <!-- Datatables -->
    <script src="{{ base_url() }}/assets/vendors/datatables.net/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-bs/js/dataTables.bootstrap.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-buttons/js/dataTables.buttons.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-buttons-bs/js/buttons.bootstrap.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-buttons/js/buttons.flash.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-buttons/js/buttons.html5.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-buttons/js/buttons.print.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-fixedheader/js/dataTables.fixedHeader.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-keytable/js/dataTables.keyTable.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-responsive/js/dataTables.responsive.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-responsive-bs/js/responsive.bootstrap.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/datatables.net-scroller/js/dataTables.scroller.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/jszip/dist/jszip.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/pdfmake/build/pdfmake.min.js" type="text/javascript"></script>
    <script src="{{ base_url() }}/assets/vendors/pdfmake/build/vfs_fonts.js" type="text/javascript"></script>

    {% if auth.permissions.can_view_player_edit_log %}
        <script>
            function loadEditLog() {
                var table = $('#editLogs').DataTable({
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        "url": "{{ base_url() }}/api/internal/player/{{ player.uid }}/logs",
                        "type": "POST",
                        data: function ( data ) {
                            data.{{ csrf.javascript.tokenNameKey }} = window.csrfTokenName;
                            data.{{ csrf.javascript.tokenValueKey }} = window.csrfTokenValue;
                        },
                        beforeSend: function (request) {
                            console.log(request);
                        },
                        complete: function (jqXHR) {
                            var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                            if (csrfToken) {
                                var csrfTokenParsed = $.parseJSON(csrfToken);

                                csrfTokenName = csrfTokenParsed.csrf_name;
                                csrfTokenValue = csrfTokenParsed.csrf_value;
                            }
                        }
                    }
                });
            }
        </script>
    {% endif %}

    {% if auth.permissions.can_view_player_notes %}
        <script>
            function loadNotes() {
                var table = $('#notesTable').DataTable({
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        "url": "{{ base_url() }}/api/internal/player/{{ player.uid }}/notes",
                        "type": "POST",
                        data: function ( data ) {
                            data.{{ csrf.javascript.tokenNameKey }} = window.csrfTokenName;
                            data.{{ csrf.javascript.tokenValueKey }} = window.csrfTokenValue;
                        },
                        beforeSend: function (request) {
                            console.log(request);
                        },
                        complete: function (jqXHR) {
                            var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                            if (csrfToken) {
                                var csrfTokenParsed = $.parseJSON(csrfToken);

                                csrfTokenName = csrfTokenParsed.csrf_name;
                                csrfTokenValue = csrfTokenParsed.csrf_value;
                            }

                            loadEditLog()
                        }
                    }
                });
            }
        </script>
    {% else %}
        {% if auth.permissions.can_view_player_edit_log %}
            <script>
                loadEditLog()
            </script>
        {% endif %}
    {% endif %}

    {% if auth.permissions.can_view_player_vehicles %}
        <script>
            var table = $('#datatable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "{{ base_url() }}/api/internal/player/{{ player.uid }}/vehicles",
                    "type": "POST",
                    data: function ( data ) {
                        data.{{ csrf.javascript.tokenNameKey }} = window.csrfTokenName;
                        data.{{ csrf.javascript.tokenValueKey }} = window.csrfTokenValue;
                    },
                    beforeSend: function (request) {
                        console.log(request);
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }



                        loadNotes()
                    }
                }
            });
        </script>
    {% else %}
        {% if auth.permissions.can_view_player_notes %}
            <script>
                loadNotes()
            </script>
        {% endif %}
    {% endif %}

    {% if auth.permissions.can_compensate %}
        <script>
            $("#compensateSave").click(function (e) {
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/compensate",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "value":document.getElementById("compensateValue").value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }

                        $('.compensate').modal('hide');
                        location.reload();
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_add_note %}
        <script>
            $("#noteSave").click(function (e) {
                var noteType = document.getElementById("types");
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/addnote",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "type":noteType.options[noteType.selectedIndex].value,
                        "msg":document.getElementById("msg").value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }

                        $('.addNote').modal('hide');
                        location.reload();
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_civ_lic %}
        <script>
            $(".license").click(function () {
                $(this).toggleClass('btn-success btn-danger');

                var url = "{{ base_url() }}/api/internal/player/{{ player.uid }}/license/".concat($(this).attr("id"));

                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_cop_rank %}
        <script>
            $("#copSave").click(function (e) {
                e.preventDefault();
                var copRanks = document.getElementById("copRanks");
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/cop",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "value":copRanks.options[copRanks.selectedIndex].value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_cop_lic %}
        <script>
            $(".copLicense").click(function () {
                $(this).toggleClass('btn-success btn-danger');

                var url = "{{ base_url() }}/api/internal/player/{{ player.uid }}/cop-license/".concat($(this).attr("id"));

                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_ems_rank %}
        <script>
            $("#emsSave").click(function (e) {
                e.preventDefault();
                var emsRanks = document.getElementById("emsRanks");
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/medic",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "value":emsRanks.options[emsRanks.selectedIndex].value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_ems_lic %}
        <script>
            $(".emsLicense").click(function () {
                $(this).toggleClass('btn-success btn-danger');

                var url = "{{ base_url() }}/api/internal/player/{{ player.uid }}/ems-license/".concat($(this).attr("id"));

                $.ajax({
                    type: "POST",
                    url: url,
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_cash %}
        <script>
            $("#cashSave").click(function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/cash",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "value":document.getElementById("cashValue").value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_bank %}
        <script>
            $("#bankSave").click(function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/bank",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "value":document.getElementById("bankValue").value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_delete_note %}
        <script>
            function deleteNote(id) {
                $("#noteID").val(id);
                $(".deleteNote").modal({
                    show: 'true'
                });
            }

            $("#delteNoteSave").click(function (e) {
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/note/delete",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "noteID":document.getElementById("noteID").value,
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }

                        $('.deleteNote').modal('hide');
                        location.reload();
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_jailed %}
        <script>
            $("#arrestedSave").click(function (e) {
                e.preventDefault();
                var arrestedSelect = document.getElementById("arrestedValue");
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/arrested",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "value": arrestedSelect.options[arrestedSelect.selectedIndex].value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_admin_rank %}
        <script>
            $("#adminSave").click(function (e) {
                e.preventDefault();
                var adminRanks = document.getElementById("adminRanks");
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/admin",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "value":adminRanks.options[adminRanks.selectedIndex].value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}

    {% if auth.permissions.can_edit_donator %}
        <script>
            $("#donatorSave").click(function (e) {
                e.preventDefault();
                var donorRanks = document.getElementById("donatorRanks");
                $.ajax({
                    type: "POST",
                    url: "{{ base_url() }}/api/internal/player/{{ player.uid }}/donator",
                    data: {
                        "{{ csrf.javascript.tokenNameKey }}":window.csrfTokenName,
                        "{{ csrf.javascript.tokenValueKey }}":window.csrfTokenValue,
                        "value":donorRanks.options[donorRanks.selectedIndex].value
                    },
                    complete: function (jqXHR) {
                        var csrfToken = jqXHR.getResponseHeader('X-CSRF-Token');

                        if (csrfToken) {
                            var csrfTokenParsed = $.parseJSON(csrfToken);

                            csrfTokenName = csrfTokenParsed.csrf_name;
                            csrfTokenValue = csrfTokenParsed.csrf_value;
                        }
                    }
                });
            });
        </script>
    {% endif %}
{% endblock %}